version: "3.8"

services:

  # Reverse proxy
  traefik:
    image: "traefik:v2.9"
    restart: unless-stopped

    # Static configuration of Traefik
    environment:
      # General configuration
      - TRAEFIK_LOG_LEVEL=${PONTOS_TRAEFIK_LOG_LEVEL:-ERROR}
      - TRAEFIK_ACCESSLOG=${PONTOS_TRAEFIK_ACCESSLOG:-false}
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=true
      - TRAEFIK_PROVIDERS_DOCKER_CONSTRAINTS=Label(`pontos.expose`, `true`)

      # Entrypoints
      - TRAEFIK_ENTRYPOINTS_web_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_traefik-dashboard_ADDRESS=:8080
      - TRAEFIK_ENTRYPOINTS_emqx-dashboard_ADDRESS=:8081

    # Dynamic configuration for exposing Traefik's dashboard an api on separate endpoints
    labels:
      - "pontos.expose=true"
      - "traefik.http.routers.traefik-dashboard.rule=(PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik-dashboard.entryPoints=traefik-dashboard"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
    ports:
      - "${PONTOS_HUB_HTTP_PORT:-80}:80"
      - "${PONTOS_TRAEFIK_DASHBOARD_PORT:-8080}:8080"
      - "${PONTOS_EMQX_DASHBOARD_PORT:-8081}:8081"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # MQTT broker
  emqx:
    image: emqx/emqx:5.0.20
    restart: unless-stopped
    environment:
      - EMQX_NAME=pontos-hub
      - EMQX_HOST=127.0.0.1
      - EMQX_ALLOW_ANONYMOUS=true
      - EMQX_ACL_NOMATCH=allow
    labels:
      - "pontos.expose=true"
      - "traefik.http.routers.emqx-ws.rule=PathPrefix(`/mqtt`)"
      - "traefik.http.routers.emqx-ws.entryPoints=web"
      - "traefik.http.routers.emqx-ws.service=emqx-ws-service"
      - "traefik.http.services.emqx-ws-service.loadbalancer.server.port=8083"
      - "traefik.tcp.routers.emqx-dashboard.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.emqx-dashboard.entryPoints=emqx-dashboard"
      - "traefik.tcp.routers.emqx-dashboard.service=emqx-dashboard-service"
      - "traefik.tcp.services.emqx-dashboard-service.loadbalancer.server.port=18083"
    volumes:
      - vol-emqx-data:/opt/emqx/data

  # Database
  db:
    build:
      context: ./database
    environment:
      POSTGRES_DB: pontos
      POSTGRES_USER: pontos_user
      POSTGRES_PASSWORD: ${PONTOS_DB_PASSWORD}
    volumes:
      - vol-pg-data:/var/lib/postgresql/data

  # REST api
  api:
    image: postgrest/postgrest:v10.1.2
    environment:
      - PGRST_DB_URI=postgres://authenticator:authenticator-password@db:5432/pontos
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://127.0.0.1:3000
      - PGRST_DB_SCHEMAS=vessel_data
      - PGRST_DB_ANON_ROLE=web_anon
    depends_on:
      - db
    labels:
      - "pontos.expose=true"
      - "traefik.http.routers.postgrest.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.postgrest.entryPoints=web"
      - "traefik.http.routers.postgrest.service=postgrest-service"
      - "traefik.http.services.postgrest-service.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.postgrest-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.postgrest.middlewares=postgrest-stripprefix@docker"

  # Swagger api docs
  swagger:
    image: swaggerapi/swagger-ui:v4.18.1
    environment:
      - API_URL=/api
      - BASE_URL=/docs
    depends_on:
      - api
    labels:
      - "pontos.expose=true"
      - "traefik.http.routers.swagger.rule=PathPrefix(`/docs`)"
      - "traefik.http.routers.swagger.entryPoints=web"
      - "traefik.http.routers.swagger.service=swagger-service"
      - "traefik.http.services.swagger-service.loadbalancer.server.port=8080"

volumes:
  vol-emqx-data:
  vol-pg-data:
